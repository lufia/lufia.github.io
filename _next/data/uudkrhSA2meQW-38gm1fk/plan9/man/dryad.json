{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>Plan 9: dryad</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"/plan9/doc/inst/index.html\">インストール</a></li>\n\t<li><a href=\"/plan9/doc/guide/index.html\">システムの使い方</a></li>\n\t<li><a href=\"/plan9/doc/devel/index.html\">プログラミング</a></li>\n\t<li><a href=\"/plan9/doc/adm/index.html\">システム管理</a></li>\n\t<li><a href=\"/plan9/man/index.html\">自作ツール集</a></li>\n\t</ul>\n</nav>\n<main>\n\t<h1>dryad</h1>\n\t<p>Cのライブラリまたは関数をテストするためのコードを自動生成します。</p>\n\t<section>\n\t\t<h2>SYNOPSIS</h2>\n\t\t<pre><code>dryad [file ...]</code></pre>\n\t</section>\n\t<section>\n\t\t<h2>DESCRIPTION</h2>\n\t\t<p>Cのライブラリをテストするためのコードを作成します。</p>\n\t\t<section>\n\t\t\t<h3>基本フォーマット</h3>\n\t\t\t<pre><code>%{\n(必要なら)Cの宣言など\n%}\n定数や処理内容の定義\n%%\nテストデータ1\nテストデータ2</code></pre>\n\t\t\t<p>%{から%}の間には、#includeや宣言文などを書きます。\n\t\t\t省略するとu.h, libc.h, regexp.hがincludeされますが、\n\t\t\tそれ以外では指定しない限り、何も仮定しません。</p>\n\t\t\t<p>%}以降から%%までの間には、テストのためのコードや、\n\t\t\t入力データのフォーマットを定義します。\n\t\t\t例えば入力データが:で区切られている場合には、\n\t\t\t%setを使って次のように定義します。</p>\n\t\t\t<pre><code>%set FS &quot;:&quot;</code></pre>\n\t\t\t<p>FSは変数名で、その次の&quot;&quot;に囲まれたものが値です。\n\t\t\tまた、%setできる変数は以下のものだけです。\n\t\t\tどちらもAwkのそれと同じルールです。</p>\n\t\t\t<dl>\n\t\t\t<div>\n\t\t\t\t<dt>FS</dt>\n\t\t\t\t<dd>field separator</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>RS</dt>\n\t\t\t\t<dd>record separator</dd>\n\t\t\t</div>\n\t\t\t</dl>\n\t\t\t<p>テストのためのコードは、%try {}文を使って定義します。\n\t\t\t{}の中にCのコードを書きます。{は%tryと同じ行になければいけません。\n\t\t\tそして}は、必ずそれだけの行に書いてください。</p>\n\t\t\t<p>%tryの中では、$1,$2,...のような引数が使えます。例えば\n\t\t\t$1は最初の入力データに対応し、それらのどれもchar*型です。\n\t\t\tそれらを使ってdrycheckを呼んでください。\n\t\t\tこの関数は、<a href=\"https://9p.io/magic/man2html/2/print\">print(2)</a>と同じ書式を扱い、\n\t\t\txpとfmtの結果が違えばエラーを報告します。</p>\n\t\t\t<pre><code>drycheck(char *xp, char *fmt, ...)</code></pre>\n\t\t\t<p>%tryの他にも、%begin,%endという文もあります。\n\t\t\tそれらは%tryの前または後に実行し、引数はありません。</p>\n\t\t\t<p>%%以降は入力データが続きます。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h3>例外処理</h3>\n\t\t\t<p>たとえばsysfatal(2)で終了した場合は、%rescueブロックを使えば\n\t\t\t調べることが可能です。エラー文字列は%rで表し、%tryと同様に、\n\t\t\tdrycheckや$1, $2等が使えます。</p>\n\t\t</section>\n\t</section>\n\t<section>\n\t\t<h2>EXAMPLE</h2>\n\t\t<pre><code>%set FS &quot;,&quot;\n%set RS &quot;\\n&quot;\n%try {\n\tdrycheck($2, &quot;%x&quot;, atoi($1));\n}\n%%\n32,20\n17,11</code></pre>\n\t</section>\n\t<section>\n\t\t<h2>SEE ALSO</h2>\n\t\t<ul>\n\t\t<li><a href=\"https://9p.io/magic/man2html/1/awk\">awk(1)</a></li>\n\t\t<li><a href=\"https://9p.io/magic/man2html/6/regexp\">regexp(6)</a></li>\n\t\t</ul>\n\t</section>\n</main>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}