{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>Plan 9: 時計合わせ</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"/plan9/doc/inst/index.html\">インストール</a></li>\n\t<li><a href=\"/plan9/doc/guide/index.html\">システムの使い方</a></li>\n\t<li><a href=\"/plan9/doc/devel/index.html\">プログラミング</a></li>\n\t<li><a href=\"/plan9/doc/adm/index.html\">システム管理</a></li>\n\t<li><a href=\"/plan9/man/index.html\">自作ツール集</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2006年9月4日更新</p>\n\t<section>\n\t\t<h1>時計合わせ</h1>\n\t\t<section>\n\t\t\t<h2>timezoneの変更</h2>\n\t\t\t<p><strong>/adm/timezone/local</strong>を、各地域のファイルで上書きします。\n\t\t\tadmグループの権限が必要になります。</p>\n\t\t\t<pre><code class=\"console\">% cp /adm/timezone/Japan /adm/timezone/local</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>sntpから時刻を受信</h2>\n\t\t\t<p>aux/timesyncを使えばいいです。</p>\n\t\t\t<pre><code class=\"sh\"># ローカルの時間に合わせる場合\naux/timesync -rL\n\n# sntpサーバを指定する場合\naux/timesync ntp.domain.dom\n\n# ファイルサーバの時刻にあわせる場合\naux/timesync -f</code></pre>\n\t\t\t<p>fオプションとデフォルト動作の違いがいまいち分かりません。</p>\n\t\t\t<div class=\"note\">\n\t\t\t\t<p>ファイルサーバの時刻に合わせるというのは、\n\t\t\t\t何か特別に通信するわけではなく、\n\t\t\t\t単純に、<strong>/</strong>を開いて、そのアクセス時刻を調べているだけです。\n\t\t\t\tなので、ファイルサーバにあわせる場合は、\n\t\t\t\t必ずfsカーネルのtimezoneを変更しておきます。\n\t\t\t\tそうしないと17時間進んでしまいますし、\n\t\t\t\t対処療法として<strong>/adm/timezone/local</strong>を-22800と変更しても、\n\t\t\t\tメールの送信時刻が17時間ずれたままです。</p>\n\t\t\t\t<p>これは、なぜ17時間なのかよく分かりません。\n\t\t\t\tupas/marshalによって作られるヘッダ</p>\n\t\t\t\t<pre><code>Date: xxxxxx -8</code></pre>\n\t\t\t\t<p>これとtimezoneのJSTが関係してそうですが。。</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>fsカーネルのtimezone変更</h2>\n\t\t\t<p>fs64/fs64.cから、以下2つの値を変更してコンパイル。\n\t\t\tこれをしないと、dumpが22:00にスケジュールされてしまいます。</p>\n\t\t\t<pre><code class=\"c\">conf.minuteswest = -9*60;\nconf.dsttime = 0;</code></pre>\n\t\t\t<p>ファイルサーバのRTCをGMTに調整(日本時間-9)して、\n\t\t\t新しいカーネルでブート。\n\t\t\tこのとき、fsがすでに稼働中だったのですが、\n\t\t\t新しいカーネルに切り替えてもファイルシステムの整合性が取れないといって\n\t\t\t異常終了するようようなエラーは無かったです。</p>\n\t\t\t<div class=\"note\">\n\t\t\t\t<p>時刻周りのデータと関数について調べてみました。</p>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>fsカーネルのデータ構造</h2>\n\t\t\t\t\t<dl>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>mktime</dt>\n\t\t\t\t\t\t<dd>カーネルのコンパイルされた時間</dd>\n\t\t\t\t\t\t<dd>versionコマンドで表示可能</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>toytime()</dt>\n\t\t\t\t\t\t<dd>mktime + ファイルサーバをブートしてからの時間</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>Time.bias</dt>\n\t\t\t\t\t\t<dd>げた</dd>\n\t\t\t\t\t\t<dd>dateコマンドで+Nとして表示される</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>Time.offset</dt>\n\t\t\t\t\t\t<dd>コンパイル時間からブートタイムまでの差分</dd>\n\t\t\t\t\t\t<dd>now - lasttoy</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>Time.lasttoy</dt>\n\t\t\t\t\t\t<dd>最後に調べたtoytime()の結果</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>time()</dt>\n\t\t\t\t\t\t<dd>Timeから計算した現在時刻を返す</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>settime(t)</dt>\n\t\t\t\t\t\t<dd>tとtime()の差分を、bias, offsetに反映する</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>rtctime()</dt>\n\t\t\t\t\t\t<dd>RTCの値を返す</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>setrtc(t)</dt>\n\t\t\t\t\t\t<dd>settime()と似ている</dd>\n\t\t\t\t\t\t<dd>RTCに保存する(BIOS時刻を更新する)</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>conf.minuteswest</dt>\n\t\t\t\t\t\t<dd>GMTからの差分</dd>\n\t\t\t\t\t\t<dd>fs64の初期値では、8*60となっている</dd>\n\t\t\t\t\t\t<dd>日本時間にするには-9*60</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>conf.dsttime</dt>\n\t\t\t\t\t\t<dd>サマータイム有無</dd>\n\t\t\t\t\t\t<dd>fs64の初期値 = 1(あり)</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>localtime()</dt>\n\t\t\t\t\t\t<dd>dateで表示する時刻</dd>\n\t\t\t\t\t\t<dd>time() - conf.minuteswest*60</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t</dl>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>各データ更新のタイミング</h2>\n\t\t\t\t\t<dl>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>ブート時</dt>\n\t\t\t\t\t\t<dd>settime(rtctime())</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>date [+-=] xxxx</dt>\n\t\t\t\t\t\t<dd>settime(xxxx)</dd>\n\t\t\t\t\t\t<dd>setrtc(xxxx)</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<dt>sntpから時刻が届いたとき</dt>\n\t\t\t\t\t\t<dd>settime(sntp)</dd>\n\t\t\t\t\t\t<dd>setrtc(sntp)</dd>\n\t\t\t\t\t</div>\n\t\t\t\t\t</dl>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>fsカーネルのsntpサーバ設定</h2>\n\t\t\t<p>configモードで、ipsntpを使います。</p>\n\t\t\t<pre><code class=\"console\">config: ipsntp xxx.xxx.xxx.xxx</code></pre>\n\t\t\t<p>1時間に1回、自動的に確認を行い、\n\t\t\t正しく受信すると、コンソールにログが流れます。</p>\n\t\t\t<pre><code>sntp 1254076626\nsntp 1254080226\nsntp 1254083826</code></pre>\n\t\t\t<p>また、sntpコマンドを使えば、手動でも動きます。</p>\n\t\t\t<pre><code class=\"console\">dryad: sntp kick\nsntp 1254076819</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>トラブルシューティング</h2>\n\t\t\t<section>\n\t\t\t\t<h3>timesyncが延々と終わらない</h3>\n\t\t\t\t<p>aux/timesyncにデバッグオプションを与えた場合には、\n\t\t\t\ttimesyncはその場合に限り<a href=\"https://9p.io/magic/man2html/2/fork\">fork(2)</a>しないので、\n\t\t\t\t延々とカレントで実行を続ける。</p>\n\t\t\t</section>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>参考ページ</h1>\n\t<ul>\n\t<li><a href=\"http://p9.nyx.link/admin/timezone.html\">時刻合わせ</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}