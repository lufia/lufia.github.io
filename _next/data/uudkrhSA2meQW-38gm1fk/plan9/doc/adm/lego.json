{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>Plan 9: legoを使った証明書更新</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"/plan9/doc/inst/index.html\">インストール</a></li>\n\t<li><a href=\"/plan9/doc/guide/index.html\">システムの使い方</a></li>\n\t<li><a href=\"/plan9/doc/devel/index.html\">プログラミング</a></li>\n\t<li><a href=\"/plan9/doc/adm/index.html\">システム管理</a></li>\n\t<li><a href=\"/plan9/man/index.html\">自作ツール集</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2019年6月24日更新</p>\n\t<section>\n\t\t<h1>legoを使った証明書更新</h1>\n\t\t<p><a href=\"https://go-acme.github.io/lego/\">lego</a>はGoで書かれたLet's encryptクライアントです。\n\t\tバイナリさえ用意すればPlan 9で動作します。</p>\n\t\t<section>\n\t\t\t<h2>legoコマンドをインストール</h2>\n\t\t\t<p>前提として<strong>/sys/lib/tls/ca.pem</strong>が必要です。\n\t\t\t準備できていない場合は、9legacyなどからインストールしましょう。</p>\n\t\t\t<p>次に、legoコマンドをインストールします。\n\t\t\tPlan 9にGo開発環境を構築済みの場合は、次のコマンドで行えます。</p>\n\t\t\t<pre><code class=\"console\">$ go get github.com/xenolf/lego/cmd/lego</code></pre>\n\t\t\t<p>または、GOOSをplan9にセットするとPlan 9で動作するコマンドがビルドできます。</p>\n\t\t\t<pre><code class=\"console\">$ git clone https://github.com/xenolf/lego\n$ cd lego/cmd/lego\n$ GOOS=plan9 GOARCH=386 go build</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>新規発行の場合</h2>\n\t\t\t<p>初めてLet's encryptで証明書を発行する場合は、lego runコマンドを使います。</p>\n\t\t\t<pre><code class=\"console\">% lego -a -m info@example.com -d example.com -k rsa2048 run</code></pre>\n\t\t\t<p>Plan 9で使う証明書を発行するために必須のオプションは上記の通りです。\n\t\t\tlegoには他にもオプションがあり、--path &lt;dir&gt;とすると証明書や鍵ファイルを\n\t\t\t&lt;dir&gt;以下で管理します。また、ip/httpd/httpdが既に動作している場合、\n\t\t\t--webroot /usr/webのようにするとhttpdを経由してドメインの確認を行います。</p>\n\t\t\t<pre><code class=\"console\">% lego -a -m info@example.com -d example.com -k rsa2048 --webroot /usr/web run\n% rm /usr/web/.well-known/acme-challenge\n% rm /usr/web/.well-known</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>更新の場合</h2>\n\t\t\t<p>新規発行の時に使ったコマンドから、runをrenewに変更するだけです。\n\t\t\t--pathオプションを使って管理ディレクトリを変更していた場合は、\n\t\t\t同じディレクトリを与えてあげる必要があります。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>httpdに反映</h2>\n\t\t\t<p>Let's encryptで発行した証明書とペアの鍵ファイルを、\n\t\t\tfactotumで扱えるように変換します。</p>\n\t\t\t<pre><code class=\"console\">% cd .lego/certificates\n% auth/pemdecode 'RSA PRIVATE KEY' example.com.key |\n&gt; auth/asn12rsa -t 'service=tls role=client owner=*' &gt;key</code></pre>\n\t\t\t<p>終わったら、bootesのfactotumに設定しましょう。</p>\n\t\t\t<pre><code class=\"console\">% auth/secstore -g factotum\n% cp key factotum (古い秘密鍵を新しい鍵で置き換え)\n% auth/secstore -p factotum\n% rm factotum</code></pre>\n\t\t\t<p>最後に、対応するサーバ証明書を更新します。</p>\n\t\t\t<pre><code class=\"console\">% sed '/^$/,$d' example.com.crt &gt;/sys/lib/tls/cert.pem\n% sed '1,/^$/d' example.com.crt &gt;/sys/lib/tls/chain.pem\n% ip/httpd/httpd -c /sys/lib/tls/cert.pem -C /sys/lib/tls/chain.pem</code></pre>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>参考ページ</h1>\n\t<ul>\n\t<li><a href=\"certs.html\">正当な証明書を扱う</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}