{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>Plan 9: 認証サーバのインストール</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"/plan9/doc/inst/index.html\">インストール</a></li>\n\t<li><a href=\"/plan9/doc/guide/index.html\">システムの使い方</a></li>\n\t<li><a href=\"/plan9/doc/devel/index.html\">プログラミング</a></li>\n\t<li><a href=\"/plan9/doc/adm/index.html\">システム管理</a></li>\n\t<li><a href=\"/plan9/man/index.html\">自作ツール集</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2006年11月12日更新</p>\n\t<section>\n\t\t<h1>認証サーバのインストール</h1>\n\t\t<section>\n\t\t\t<h2>認証サーバカーネルのインストール</h2>\n\t\t\t<div class=\"note\">\n\t\t\t\t<section>\n\t\t\t\t\t<h3>ilの組み込み</h3>\n\t\t\t\t\t<p>dumpfsへ接続する場合には、ilの組み込みが必須です。\n\t\t\t\t\t詳細は<a href=\"il.html\">カーネルにilを組み込む</a>をみてください。\n\t\t\t\t\tfossilやventiを使う場合には不要です。</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<p><strong>/sys/src/9/pc/pcauth</strong>が認証サーバカーネルの設定ファイルになります。\n\t\t\t必要なら<strong>pcauth</strong>に手を入れて、カーネルをコンパイルします。\n\t\t\tコマンドは以下。</p>\n\t\t\t<pre><code class=\"console\">% cd /sys/src/9/pc\n% mk 'CONF=pcauth'</code></pre>\n\t\t\t<div class=\"note\">\n\t\t\t\t<section>\n\t\t\t\t\t<h3>一般ユーザでのコンパイル</h3>\n\t\t\t\t\t<p>通常、sysグループに属していないユーザでは、\n\t\t\t\t\t<strong>/sys/src/9</strong>に書き込みができないのでコンパイルできません。\n\t\t\t\t\tそういう場合、<a href=\"https://9p.io/magic/man2html/1/bind\">bind(1)</a>をうまく使うことによって、\n\t\t\t\t\t書き込み先を変更するテクニックがあります。</p>\n\t\t\t\t\t<pre><code class=\"sh\">#!/bin/rc\n\nif(! test -e $home/cpu){\n\tmkdir -p $home/cpu/ ^ (pc port boot)\n\tcp /sys/src/9/pc/pcauth $home/cpu/pc/pcauth\n}\nbind -bc $home/cpu/pc /sys/src/9/pc\nbind -bc $home/cpu/port /sys/src/9/port\nbind -bc $home/cpu/boot /sys/src/9/boot\nbind $home/cpu/pcauth /sys/src/9/pc/pcauth\n\necho 'cd /sys/src/9/pc &amp;&amp; mk ''CONF=pcauth'''</code></pre>\n\t\t\t\t\t<p>このスクリプトは<a href=\"http://www.geocities.co.jp/SiliconValley/6131/plan9/easyserver.html\">ADSLでお気軽自宅サーバ</a>\n\t\t\t\t\tを参考にしました。</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t\t<p>コンパイルが終われば、<strong>/n/9fat/</strong>に<strong>9pcauth</strong>をコピーします。\n\t\t\t最後に<strong>/n/9fat/plan9.ini</strong>に以下を追加すると、\n\t\t\t起動時にどちらのカーネルを使うか尋ねられるようになります。\n\t\t\tすでにあるbootfileを書き換えた場合は聞かれません。</p>\n\t\t\t<pre><code class=\"ini\">bootfile=sdC0!9fat!9pcauth</code></pre>\n\t\t\t<p>まだ再起動しません。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ネットワーク構成の編集</h2>\n\t\t\t<p><strong>/lib/ndb/local</strong>に、認証サーバまわりの項を追加します。\n\t\t\t詳しくは<a href=\"../adm/ndb.html\">ネットワークの設定</a>に書きます。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>サービスの隔離</h2>\n\t\t\t<p>通常、サービスは<strong>/rc/bin/^(service service.auth)</strong>をもとに起動しますが、\n\t\t\tせっかく<strong>/cfg/$sysname</strong>というサーバ固有の場所があるのですから\n\t\t\tそちらに移してしまったほうが管理しやすいと思うので移動させます。</p>\n\t\t\t<pre><code class=\"console\"># mkdir /cfg/$sysname/ ^ (service service.auth)\n# cp -gux /rc/bin/service/* /cfg/$sysname/service\n# cp -gux /rc/bin/service.auth/* /cfg/$sysname/service.auth</code></pre>\n\t\t\t<div class=\"note\">\n\t\t\t\t<p>fsカーネルをルートファイルシステムとしている場合は、\n\t\t\t\tallowしないと所有者情報などが書き込みできません。\n\t\t\t\tその場合、次のようにします。</p>\n\t\t\t\t<p>fsカーネルコンソールから、各ディレクトリを作成。\n\t\t\t\tfs:というのはファイルサーバのプロンプトになります。</p>\n\t\t\t\t<pre><code class=\"console\">fs: create /cfg/wisp/service sys sys 775 d\nfs: create /cfg/wisp/service.auth sys sys 775 d\nfs: allow\t\t# 所有者もコピーするため</code></pre>\n\t\t\t\t<p>認証サーバでファイルといっしょに所有者情報もコピーする。</p>\n\t\t\t\t<pre><code class=\"console\">cpu% cp -gux /rc/bin/service/* /cfg/wisp/service\ncpu% cp -gux /rc/bin/service.auth/* /cfg/wisp/service.auth</code></pre>\n\t\t\t\t<p>ファイルサーバコンソールから、後始末。</p>\n\t\t\t\t<pre><code class=\"console\">fs: disallow</code></pre>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>cpurcの編集</h2>\n\t\t\t<p>次に、<strong>cpurc</strong>を編集します。\n\t\t\t以前は<strong>/rc/bin/cpurc</strong>を直接編集する方法でしたが、\n\t\t\tいつの間にか<strong>/cfg/$sysname/cpurc</strong>を用意する形になりました。\n\t\t\t2007年4月には変わってましたね。</p>\n\t\t\t<pre><code class=\"sh\">eval `{ndb/ipquery sys $sysname ip ipgw ipmask}\nip/ipconfig -g $ipgw ether /net/ether0 add $ip $ipmask\nndb/dns -r\naux/timesync -rL\n\nauth/keyfs -wp -m /mnt/keys /adm/keys &gt;/dev/null &gt;[2=1]\nauth/cron &gt;&gt;/sys/log/cron &gt;[2=1] &amp;\nauth/secstored\n\naux/listen -q -t /cfg/wisp/service.auth -d /cfg/$sysname/service tcp\n\n# ilを組み込んだ場合は以下も有効に\n#aux/listen -q -t /cfg/wisp/service.auth -d /cfg/$sysname/service il\n\nsleep 3</code></pre>\n\t\t\t<p>愛知大学の真似をしてndbからデータを引いていますが、\n\t\t\tIPを直接書いてしまってもかまいません。\n\t\t\tsleepは、サービスが立ち上がりきるのを待ってます。</p>\n\t\t\t<p>最後に、念のため<strong>nvram</strong>を壊しておいて、再起動。</p>\n\t\t\t<pre><code class=\"console\">% echo blah &gt;/dev/sdC0/nvram</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>nvramの設定</h2>\n\t\t\t<p>初回起動時に、認証のための情報をいくつか尋ねられます。\n\t\t\tこの情報を変更したい場合は、再度<strong>nvram</strong>を壊して再起動するか、\n\t\t\t認証サーバのコンソールからauth/wrkeyを実行すればいいです。</p>\n\t\t\t<pre><code>authid: bootes\nauthdom: mana.lufia.org\nsecstore: xxxxx\npassword: zzzzz</code></pre>\n\t\t\t<p>secstoreには、bootesのsecstoreパスワードを入力します。\n\t\t\timap4sを立てるときに鍵置き場として使いましたが、\n\t\t\t通常は空でいいと思います。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ユーザbootesの作成</h2>\n\t\t\t<pre><code class=\"console\"># auth/changeuser -p bootes  # パスワードはnvramと同じ</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>認証でadmとsysをはじく</h2>\n\t\t\t<p>sysとadmをユーザとして認証しないように、\n\t\t\t<strong>/lib/ndb/auth</strong>に以下を追加します。</p>\n\t\t\t<pre><code class=\"ini\">hostid=bootes\n    uid=!sys uid=!adm uid=*</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>デバッグ</h2>\n\t\t\t<p>認証サーバのコンソールからauth/debugを使うと、\n\t\t\t登録されているユーザごとに認証のテストが行えます。\n\t\t\t認証でこけている場合は、<strong>cpurc</strong>等でのコマンド呼び出し順が\n\t\t\t違うのかもしれません。\n\t\t\t名前空間の関係から、順番がかなり重要になっています。\n\t\t\t何度か引っかかりました。</p>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<section>\n\t\t<h1>関連情報</h1>\n\t\t<ul>\n\t\t<li><a href=\"il.html\">カーネルにilを組み込む</a></li>\n\t\t<li><a href=\"dist.html\">分散システムのインストール</a></li>\n\t\t</ul>\n\t</section>\n\t<section>\n\t\t<h1>参考ページ</h1>\n\t\t<ul>\n\t\t<li><a href=\"https://9p.io/wiki/plan9/Configuring_a_Standalone_CPU_Server/index.html\">Configuring a Standalone CPU Server</a></li>\n\t\t<li><a href=\"http://www.geocities.co.jp/SiliconValley/6131/plan9/easyserver.html\">ADSLでお気軽自宅サーバ</a></li>\n\t\t</ul>\n\t</section>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}