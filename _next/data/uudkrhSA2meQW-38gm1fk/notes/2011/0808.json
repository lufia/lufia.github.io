{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: IPv6の実装を読むよ(途中)</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2011年8月8日作成</p>\n\t<section>\n\t\t<h1>IPv6の実装を読むよ(途中)</h1>\n\t\t<dl>\n\t\t<div>\n\t\t\t<dt>Ipselftab</dt>\n\t\t\t<dt>Ipself</dt>\n\t\t\t<dd>チェインハッシュで実装されたローカルアドレスのキャッシュ</dd>\n\t\t\t<dd>ルーティング用らしい</dd>\n\t\t</div>\n\t\t<div>\n\t\t\t<dt>Ipmcast</dt>\n\t\t\t<dd>マルチキャストのリストらしいが使ってないと思う</dd>\n\t\t</div>\n\t\t<div>\n\t\t\t<dt>Ipifc</dt>\n\t\t\t<dd>インターフェイスカード</dd>\n\t\t\t<dd>rpはルータパラメータ</dd>\n\t\t</div>\n\t\t<div>\n\t\t\t<dt>Routerparams</dt>\n\t\t\t<dd>MTUとかいろいろなパラメータ</dd>\n\t\t\t<dd>ipifcra6()で設定している</dd>\n\t\t</div>\n\t\t</dl>\n\t\t<section>\n\t\t\t<h2>esp.c</h2>\n\t\t\t<p>途中</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ipaux.c</h2>\n\t\t\t<p>途中</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ipmux.c</h2>\n\t\t\t<p>途中</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ipv6.c</h2>\n\t\t\t<section>\n\t\t\t\t<h3>ipoput6</h3>\n\t\t\t\t<pre><code>if(送信元アドレスが一時アドレス)\n\tブロックを解放して終える\nif(gating){\n\tいろいろ\n}\nルート = v6lookup(送信先アドレス)\nif(ルートのタイプが(Rifc|Runi))\n\tゲート = 送信先アドレス\nelse if(ルートのタイプが(Rbcast|Rmulti)){\n\tゲート = 送信先アドレス\n\tsr = v6lookup(送信元アドレス)\n\tif(srがユニキャストアドレス)\n\t\tifc = sr-&gt;ifc\n}else\n\tゲート = ルート-&gt;v6.gate\n\nブロックのヘッダにversion, ttl, tosを設定\nif(ブロック長 &lt;= 1度に送れる容量){\n\tbwrite(ブロック, V6, ゲート)\n\treturn 0\n}\nif(gating &amp;&amp; reassemble &lt;= 0)\n\tdiscard\n\nfor(フラグメント)\n\t分割して、1つずつbwrite()</code></pre>\n\t\t\t\t<p>bwriteはethermedium.cで定義されているetherbwriteのこと。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ethermedium.c</h2>\n\t\t\t<section>\n\t\t\t\t<h3>etherbwrite</h3>\n\t\t\t\t<pre><code>a = arpget(送信先アドレス, &amp;MACアドレス)\nif(a){\n\t// ARP未解決の場合\n\tbp = multicastarp(a, &amp;MACアドレス)\n\tif(bp == nil){\n\t\tversionによりsendarp(v4)かresolveaddr6(v6)を呼び出す\n\t\treturn\n\t}\n}\nbp = ブロックにetherヘッダ領域を確保\nbp = ブロックのリストをひとつにまとめる\nif(bpの長さが最小転送量より小さい)\n\tbp = adjustblock(bp)\neh = bpのetherヘッダ領域\nehに送信元/送信先のMACアドレスを設定\nswitch(version){\ncase V4:\n\t...\ncase V6:\n\teh-&gt;t[0] = 0x86\n\teh-&gt;t[1] = 0xDD\n\tdevtab[mchan6-&gt;type]-&gt;bwrite(bp)\n}</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>multicastarp</h3>\n\t\t\t\t<pre><code>switch(ipforme(アドレス)){\ncase ユニキャスト:\n\treturn nil\ncase ブロードキャスト:\n\tmemset(MACアドレス, 0xff, 6)\n\treturn arpresolve(ARPテーブル, ARPリクエスト, MACアドレス)\n}\nswitch(multicastea(MACアドレス, アドレス)){\nV6でもV4でも:\n\treturn arpresolve(ARPテーブル, ARPリクエスト, MACアドレス)\n}</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>resolveaddr6</h3>\n\t\t\t\t<pre><code>if(ARPエントリがタイムアウト){\n\tarprelease(ARPエントリ)\n\treturn\n}\nARPエントリの待機リストから最後を残して削除\nARPエントリをいろいろ設定\nif(sflag = ipv6anylocal(ipsrc))\n\ticmpns(ipsrc, TARG_MULTI, MACアドレス)</code></pre>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>arp.c</h2>\n\t\t\t<section>\n\t\t\t\t<h3>arpget</h3>\n\t\t\t\t<p>指定のIPアドレスがすでに解決されていれば、\n\t\t\t\tそのMACアドレスを引数に詰めてnilを返す。\n\t\t\t\tなければ、newarp6を呼び出しその戻り値を返す。</p>\n\t\t\t\t<pre><code>a = 指定のIPアドレスでarpテーブルを調べる\nif(a == nil){\n\ta = newarp6(arpテーブル, V6なら1)\n\taの状態をAWAITに\n}\na-&gt;utime = NOW\nif(aの状態がAWAIT){\n\taの待機リスト(hold)に送るつもりのブロックを追加\n\treturn a\n}\n引数macにarpで取得したMACアドレスを書き込む\nif(aが古いエントリなら)\n\tcleanarpent(arpテーブル, a)\nreturn nil</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>newarp6</h3>\n\t\t\t\t<pre><code>a = 最も古いARPリクエスト\nif(aがIPv4でなければ){\n\tarpのドロップリストにaの待機リストを追加\n\twakeup(&amp;arp-&gt;rxmtq)\n}\narpハッシュ(hash)からaを削除\narpハッシュに新しくaを追加\naのip, utime, ctime, type, rtime, etcを更新\n\nif(!ipismulticast(a-&gt;ip) &amp;&amp; version==V6){\n\t再送チェイン(rxmt)に登録？\n}\na-&gt;nextrxt = nil\nreturn a</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>arpresolve</h3>\n\t\t\t\t<pre><code>a = ARPテーブルより調べるARPエントリを取り除く\nmemmove(a-&gt;mac, mac, len)\nbp = aの待機リスト\naのtype, state, utime, holdをリセット\nreturn bp</code></pre>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>iproute.c</h2>\n\t\t\t<p>途中</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ip.c</h2>\n\t\t\t<p>ip6パラメータとかフラグメントの初期化。</p>\n\t\t\t<p>ipiput4でバージョン判定してipiput6呼び出し。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ipifc.c</h2>\n\t\t\t<dl>\n\t\t\t<div>\n\t\t\t\t<dt>addselfcache</dt>\n\t\t\t\t<dd>自分自身のIPアドレスをキャッシュに追加</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>iptentative</dt>\n\t\t\t\t<dd>指定のアドレスが自分のものなら、それが一時的なものか調べる</dd>\n\t\t\t\t<dd>一時的なアドレスなら1</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>ipforme</dt>\n\t\t\t\t<dd>指定のアドレスが自分のものなら、その種類(uni, bcast, mcast)を返す</dd>\n\t\t\t\t<dd>自分のアドレスでなければ0</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>v6addrtype</dt>\n\t\t\t\t<dd>指定のアドレスがどのクラス(linklocalv6, globalv6)か調べる</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>findprimaryipv6</dt>\n\t\t\t\t<dd>優先順にグローバル、リンクローカル、未指定でローカルアドレスを調べる</dd>\n\t\t\t\t<dd>見つかれば引数localにそのアドレスが渡される</dd>\n\t\t\t</div>\n\t\t\t</dl>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>icmp6.c</h2>\n\t\t\t<p>途中</p>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}