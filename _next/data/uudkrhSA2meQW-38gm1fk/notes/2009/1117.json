{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: ルフィアノート再構築と/env</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2009年11月17日作成</p>\n\t<section>\n\t\t<h1>ルフィアノート再構築と/env</h1>\n\t\t<p>久しぶりに、<a href=\"/estpolis/index.html\">ルフィアノート</a>を更新しました。\n\t\t今までの作りでは、明らかな問題が2つと気になる点が1つ、\n\t\tあとやってみたいことが2つあったので、\n\t\tエストポリス新作発表によるモチベーション向上にあわせてリニューアル。</p>\n\t\t<section>\n\t\t\t<h2>問題点</h2>\n\t\t\t<section>\n\t\t\t\t<h3>JavaScript+XSLT</h3>\n\t\t\t\t<p>今まではJavaScript+XSLTで作っていたのですが、\n\t\t\t\tそれだとOperaやSafariでは動きませんでした。\n\t\t\t\tどうやらSafariは、JavaScriptからXSLTパーサを呼び出すことが\n\t\t\t\tできないようなのですね。Operaはなんだったかな、忘れました。</p>\n\t\t\t\t<p>そんなわけで、これに依存しきっていたので、\n\t\t\t\t機能的な意味で使えないページになってしまっていました。\n\t\t\t\tまた、<a href=\"0706.html\">AJAXSLTも使ってみました</a>が、\n\t\t\t\tあれは使いこなせそうにありません。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>文字コード未指定</h3>\n\t\t\t\t<p>XML宣言で文字コード指定していたので、\n\t\t\t\tmetaタグはいらないだろうと思って書いていませんでしたが、\n\t\t\t\tたまに、IE6に限らずIE7でさえ真っ白になってしまうことがありました。\n\t\t\t\t文字コードを正しく選べば表示されますが、\n\t\t\t\t化けるのではなく真っ白なので、ふつう気づきません。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>気になる点</h2>\n\t\t\t<section>\n\t\t\t\t<h3>関連ファイル管理が複雑</h3>\n\t\t\t\t<p>これは内部的な問題ですが、元データファイル、\n\t\t\t\tデータからXMLへの変換プログラム各種、ヘッダとフッタの共通部分、\n\t\t\t\tふつうのHTMLファイル、ごちゃごちゃしたmkfile、\n\t\t\t\tそれに加えてCSS、JavaScript、XSLT等、\n\t\t\t\t手間を減らすために作った環境が、かえってめんどくさくて\n\t\t\t\t更新する意欲を減らしていたように思います。\n\t\t\t\t新しいページを追加するには楽でいいのですが、\n\t\t\t\t全体的に手を入れようとすると気持ちが萎える状態。\n\t\t\t\tそこで、複雑なシステムは使われないの格言に従って、\n\t\t\t\tもっとシンプルな方法にしようと思いました。</p>\n\t\t\t\t<p>これは、シンプルすぎると管理が大変になるので、\n\t\t\t\tどこを自動化するか難しいところです。\n\t\t\t\tほんとうはデータベース使うといいのでしょうけど、\n\t\t\t\tそうすると、マップに附属するメモのような、\n\t\t\t\tデータ以外の文章をどのように扱うか悩みます。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>やってみたいこと</h2>\n\t\t\t<section>\n\t\t\t\t<h3>HTML5</h3>\n\t\t\t\t<p>記述がシンプルになるので、HTML5は気に入っています。\n\t\t\t\tXHTML2を待っていた方々からすれば不評かもしれませんが、\n\t\t\t\t<a href=\"http://mojix.org/2008/09/05/html_is_not_content\">HTMLは表示のための言語</a>\n\t\t\t\tだと割り切れば、そんなに悪いものでもないのではないかなあ。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>個々のアイテムごとにURL割り当て</h3>\n\t\t\t\t<p>今まではJavaScript+XSLTで処理していたので気にしませんでしたが、\n\t\t\t\tそれが使えなくなってしまったので、個々のアイテムごとに\n\t\t\t\tURLを持たせたいなあ、と。</p>\n\t\t\t\t<pre><code>http://lufia.org/estpolis/item.html</code></pre>\n\t\t\t\t<p>このようにまとめるのではなく、以下のように。</p>\n\t\t\t\t<pre><code>http://lufia.org/estpolis/item/index.html\nhttp://lufia.org/estpolis/item/potion.html</code></pre>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>作ってみた結果</h2>\n\t\t\t<p>共通部分の取り込みだけ自動化して、\n\t\t\tあとはベタに書くようにしてみました。\n\t\t\tデータに修正が入ったとき、ちょっと大変かなあと思いますが、\n\t\t\tほとんど作っていたので、修正はあまりないだろうからいいかな。</p>\n\t\t\t<p>唯一困ったことといえば、Plan 9の環境変数は文字数制限があるようで、\n\t\t\t大量のファイルをmkで扱おうとするとエラーになってしまいました。</p>\n\t\t\t<p class=\"note\">ちょうど<a href=\"http://groups.google.com/group/comp.os.plan9/browse_thread/thread/cdf5eb70b20c9354/693130a1eabf43e9\">9fansでも話題にあがりました</a>ね。</p>\n\t\t\t<pre><code class=\"makefile\">PAGE=`{ls */*.w}\nTARG=${PAGE:%.w=%.html}\n\nall:V: $TARG\n\n...</code></pre>\n\t\t\t<p>このルールでmkすると。</p>\n\t\t\t<pre><code class=\"console\">% mk\n/env/TARG: read or write too large\n/env/TARG: read or write too large\n/env/TARG: read or write too large\n...</code></pre>\n\t\t\t<p>しかたがないので分割することに。\n\t\t\tPAGEには全部のファイル名が含まれますが、\n\t\t\tTARGは.wで終わるものを.htmlに変換したファイル名のみになっています。</p>\n\t\t\t<pre><code class=\"makefile\">PAGE=`{lspart $LSFLAGS $DB}\nTARG=${PAGE:%.w=%.html}\n\nworld:V:\n\tmk $MKFLAGS all 'DB=tale'\n\tfor(p in `{seq 0 2})\n\t\tmk $MKFLAGS all 'DB=stuff' 'LSFLAGS=-D3 -P'$p\n\nall:V: $TARG\n\n...</code></pre>\n\t\t\t<p>mkfileで使っているlspartは以下のように。</p>\n\t\t\t<pre><code class=\"sh\">#!/bin/rc\n# support tool for mk\n\nrfork e\n\nlsflag='d,l,m,n,p,q,r,s,t,u,F,Q,T'\nflagfmt=$lsflag',D div,P part'\nargs='[file ...]'\nif(! ifs=() eval `{aux/getflags $*}){\n\taux/usage\n\texit usage\n}\n\nifs=, {x=`{echo $lsflag}}\nfor(f in $x){\n\tkey=flag$f\n\ta=$$key\n\tif(! ~ $#a 0)\n\t\topt=($opt $f)\n}\nif(! ~ $#opt 0)\n\topt=-$&quot;opt\nif(~ $#flagD 0)\n\tflagD=1\nif(~ $#flagP 0)\n\tflagP=0\n\nn=`{ls $opt $* | wc -l}\nd=`{\techo '\n\tn = '$n/$flagD'\n\tm = int(n)\n\tif((n-m) &gt; 0.0) print m+1 else print n\n\t' | hoc\n}\nn=`{echo $flagP '*' $d + 1 | hoc}\nt=`{echo $n + $d - 1 | hoc}\nls $opt $* | sed -n $n,$t^p</code></pre>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}