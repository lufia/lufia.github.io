{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: 家計簿作成メモ</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2010年5月9日更新</p>\n\t<section>\n\t\t<h1>家計簿作成メモ</h1>\n\t\t<p>webアプリ家計簿を作ったときに調べたことをメモ。</p>\n\t\t<section>\n\t\t\t<h2>データ</h2>\n\t\t\t<section>\n\t\t\t\t<h3>JSONかXMLか</h3>\n\t\t\t\t<p>悩んだけど、ふつうにXMLで。\n\t\t\t\tというのも、JSONはパースが楽なのはいいけれど、\n\t\t\t\t反面、<a href=\"http://www.atmarkit.co.jp/fcoding/index/webapp.html\">いろいろめんどくさい</a>ので、\n\t\t\t\tじゃあ自分で書くよ、と。\n\t\t\t\tそれにXMLで表現すると、\n\t\t\t\t一般的なXMLツールが使えるのもうれしいしね。\n\t\t\t\tXML Schemaとか、XSLTとか。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>XMLの検査</h3>\n\t\t\t\t<dl>\n\t\t\t\t<div>\n\t\t\t\t\t<dt><a href=\"http://www.w3.org/2001/03/webdata/xsv\">XSV</a></dt>\n\t\t\t\t\t<dd>XML Schemaそのもののチェック</dd>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<dt><a href=\"http://tools.decisionsoft.com/schemaValidate/\">XML Schema Validator</a></dt>\n\t\t\t\t\t<dd>XML文書のチェック</dd>\n\t\t\t\t</div>\n\t\t\t\t</dl>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>サーバ</h2>\n\t\t\t<p>当然Plan 9で動かすので、それなりに。</p>\n\t\t\t<section>\n\t\t\t\t<h3>認証</h3>\n\t\t\t\t<p>見られるのは別にいいけど、勝手に変更されるのは困るので、\n\t\t\t\tPlan 9でいちばん手軽なhttps+basic認証を使います。\n\t\t\t\t参考までに/cfg/wisp/cpustartの一部。</p>\n\t\t\t\t<pre><code class=\"sh\">ip/httpd/httpd\nip/httpd/httpd -c cert \\\n\t-n /cfg/wisp/namespace.https -w /usr/sweb</code></pre>\n\t\t\t\t<p>他のhttpdだと、XST(Cross Site Tracing)の危険性があるので\n\t\t\t\tTRACEを無効にしないと恐いですが、\n\t\t\t\tPlan 9 httpdはGET, HEAD, POSTしか対応していないので大丈夫。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>実行ファイルの置き場所</h3>\n\t\t\t\t<p>CGIは/bin/ip/httpd以下に置きます。\n\t\t\t\tたとえばpostというプログラムを置くと、\n\t\t\t\thttp://domain.dom/magic/postとして参照します。\n\t\t\t\tちなみに/magic/post/path/toと参照すると、\n\t\t\t\tpostから/path/toを調べられます。\n\t\t\t\tPATH_INFOみたいなこともできますね。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>作り方</h3>\n\t\t\t\t<p>/sys/src/cmd/ip/httpd以下のソースを参考にして作ります。\n\t\t\t\tPATH_INFO系の扱い方はman2html.c、\n\t\t\t\tPOSTの動作はwikipost.cあたりがおすすめ。</p>\n\t\t\t\t<p>ちなみに附属のライブラリを使う場合、\n\t\t\t\thttpsrv.hをincludeしないといけないので、\n\t\t\t\tソースを/sys/src/cmd/ip/httpd以下にbindしたほうが便利です。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>各種変数</h3>\n\t\t\t\t<dl>\n\t\t\t\t<div>\n\t\t\t\t\t<dt>httpdのルートディレクトリ</dt>\n\t\t\t\t\t<dd>webroot</dd>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<dt>リクエストメソッド</dt>\n\t\t\t\t\t<dd>HConnection.req-&gt;meth</dd>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<dt>PATH_INFOのようなもの</dt>\n\t\t\t\t\t<dd>HConnection.req-&gt;uri</dd>\n\t\t\t\t</div>\n\t\t\t\t</dl>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>動作環境</h3>\n\t\t\t\t<p>httpdは、ユーザnoneで動作しています。</p>\n\t\t\t\t<p class=\"note\">noneは常にotherビットの扱いになります。\n\t\t\t\t詳しくは<a href=\"http://plan9.aichi-u.ac.jp/none/\">ユーザ none</a>。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>CGIトラブルシューティング</h2>\n\t\t\t<section>\n\t\t\t\t<h3>パーミッションは間違っていないのに、createがエラーになる</h3>\n\t\t\t\t<p><a href=\"https://9p.io/magic/man2html/2/create\">create(2)</a>は、OWRITEでディレクトリを作るとエラーになります。</p>\n\t\t\t\t<pre><code class=\"c\">//fd = create(file, OWRITE, 0777|DMDIR);\nfd = create(file, OREAD, 0777|DMDIR);\nclose(fd)</code></pre>\n\t\t\t\t<p>よく考えれば当然のような気もしますが、割と悩みました。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>syslogに書き込んだはずなのに記録されていない</h3>\n\t\t\t\t<p>syslogは、最初に呼び出された時に/sys/log/lognameを開いて、\n\t\t\t\t次からはそれに対して書き込みをします。\n\t\t\t\tなので、bindでルートを変更した場合、\n\t\t\t\tbind前にファイルを開いていなければログが保存できません。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>localtimeで返すタイムゾーンがGMTになる</h3>\n\t\t\t\t<p>これもsyslogと同様に、はじめて呼ばれたときに/env/timezoneを\n\t\t\t\t読みます。/envが開けない場合はGMTとして扱われます。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>クライアント</h2>\n\t\t\t<section>\n\t\t\t\t<h3>使ったライブラリ</h3>\n\t\t\t\t<ul>\n\t\t\t\t<li>jQuery</li>\n\t\t\t\t<li>jQuery UI</li>\n\t\t\t\t<li>html5.jpの折れ線グラフ、円グラフ</li>\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>webアプリトラブルシューティング</h2>\n\t\t\t<section>\n\t\t\t\t<h3>jQuery.ajaxエラー時のHTTPエラーコードが見たい</h3>\n\t\t\t\t<p>第1引数のstatusを見ます。</p>\n\t\t\t\t<pre><code class=\"js\">$.ajax({\n\terror: function(req){\n\t\talert(req.status)\n\t}\n})</code></pre>\n\t\t\t\t<p>req.statusTextはエラー内容のはずですが、\n\t\t\t\t常にOKが入っているのはなぜだろう。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>jQuery UI datepickerの書式をyyyy/mm/ddにしたい</h3>\n\t\t\t\t<p>dateFormatオプションに書式を与えます。</p>\n\t\t\t\t<pre><code class=\"js\">$('input.date').datepicker({\n\tdateFormat: 'yy/mm/dd'\n})</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>html5.jpのグラフを再度drawすると、前のグラフが残る</h3>\n\t\t\t\t<p>不具合なのか仕様なのか分かりませんが、とりあえず回避。</p>\n\t\t\t\t<pre><code class=\"html\">&lt;section id=&quot;graph&quot;&gt;\n\t&lt;div&gt;\n\t&lt;canvas width=&quot;200&quot; height=&quot;200&quot; id=&quot;canvas1&quot;&gt;&lt;/canvas&gt;\n\t&lt;/div&gt;\n&lt;/section&gt;</code></pre>\n\t\t\t\t<pre><code>$('#graph &gt; div &gt; div').remove()\ncircle.draw(...)</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>数値型に変換しようと&quot;3&quot;+0とすると、&quot;30&quot;になる</h3>\n\t\t\t\t<p>Awkのくせでやってました。\n\t\t\t\tJavaScriptは文字列連結が+なのでそうなるらしいです。\n\t\t\t\tちょっと変形させて&quot;3&quot;-0なら3になります。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>メモ</h3>\n\t\t\t\t<ul>\n\t\t\t\t<li>jQuery、連想配列をeachした時の動作がおかしい</li>\n\t\t\t\t<li>DOMノードをafter()で追加した時の動作がなんだかおかしい</li>\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<section>\n\t\t<h1>参照ページ</h1>\n\t\t<ul>\n\t\t<li><a href=\"https://9p.io/magic/man2html/2/perror\">perror(2)</a></li>\n\t\t</ul>\n\t</section>\n\t<section>\n\t\t<h1>気になった記事</h1>\n\t\t<ul>\n\t\t<li><a href=\"http://www.security.gs/magazine/security/2010/04/14/story_2518/\">WebメールのHTTP通信の危険性</a></li>\n\t\t</ul>\n\t</section>\n</aside>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}