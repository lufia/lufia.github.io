{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: WCF Data Servicesメモ</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2011年6月28日更新</p>\n\t<section>\n\t\t<h1>WCF Data Servicesメモ</h1>\n\t\t<section>\n\t\t\t<h2>WCF Data ServicesとWCF RIA Servicesの使い分け</h2>\n\t\t\t<table>\n\t\t\t<tr><td>WCF(ASMX Web Service)</td><td>SOAP</td></tr>\n\t\t\t<tr><td>WCF Data Service</td><td>REST</td></tr>\n\t\t\t<tr><td>WCF RIA Services</td><td>両方対応っぽい感じ</td></tr>\n\t\t\t</table>\n\t\t\t<p>結局どれを使えばいいの？ってところですけど、<a href=\"http://blogs.msdn.com/b/aonishi/archive/2010/05/31/10017706.aspx\">MSDNのブログ</a>によると、</p>\n\t\t\t<blockquote>エンティティやメタデータを利用して\n\t\t\tビジネスロジックを実装していく場合は、WCF RIA Services、\n\t\t\tRESTアクセスが中心ならばWCF Data Servicesという感じです。</blockquote>\n\t\t\t<p>とのことです。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>JSON形式でデータ操作</h2>\n\t\t\t<p>通常はXML形式のデータが返ってきますが、\n\t\t\tリクエストのAcceptヘッダをapplication/jsonにしておくと、\n\t\t\tJSONで返してくれます。</p>\n\t\t\t<pre><code class=\"console\">% telnet svr 80\nGET /Service.svc/List?$top=2 HTTP/1.1\nHost: svr\nConnection: close\nAccept: application/json</code></pre>\n\t\t\t<p>ここで、HTTP/1.0にすると、\n\t\t\tAcceptヘッダが無視されてXML形式になるので注意です。\n\t\t\tまた、POSTやPUTの時は、これに加えてContent-Typeも指定しておきます。</p>\n\t\t\t<pre><code class=\"http\">Content-Type: application/json</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>サービス操作</h2>\n\t\t\t<p>svcファイルに、WebGetかWebInvoke属性を付けたメソッドを定義して、\n\t\t\tSetServiceOperationAccessRuleを使って公開します。</p>\n\t\t\t<ul>\n\t\t\t<li><a href=\"http://msdn.microsoft.com/ja-jp/library/dd744841.aspx\">サービス操作を定義する</a></li>\n\t\t\t</ul>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>複数の主キー</h2>\n\t\t\t<p>1つの場合は、括弧の中にそのまま値を書きますが、\n\t\t\t複数ある場合は名前と値のペアを並べるようです。</p>\n\t\t\t<pre><code>List(1)\nList('ID')\nList(Key1='xxx',Key2=0)</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>子アイテムの指定方法</h2>\n\t\t\t<p>$expandや$selectに渡すプロパティ名は、/で階層を表します。</p>\n\t\t\t<pre><code>$expand=Item,Item/Details</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>非同期ローディング</h2>\n\t\t\t<p>Silverlightなどで、非同期読み込みする場合、\n\t\t\t比較的便利な書き方があったのでメモ。</p>\n\t\t\t<pre><code class=\"cs\">var uri = new Uri(&quot;DataService.svc&quot;, UriKind.RelativeOrAbsolute);\nvar ctxt = new DataEntities(uri);\nvar binding = new DataServiceCollection&lt;Item&gt;();\nbinding.LoadCompleted += (sender, e) =&gt; {\n\tif(e.Error != null)\n\t\treturn;\n\tif(binding.Continuation != null){\n\t\tbinding.LoadNextPartialSetAsync();\n\t\treturn;\n\t}\n\t// ここでデータが全部読み込み終わり\n\tvar q1 = from c in binding select c.xxx;\n};\nbinding.LoadAsync(ctxt.Items);</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>ADO.NET Entity Frameworkメモ</h2>\n\t\t\t<p>WCF Data Servicesとは違いますが、\n\t\t\t関係も深いのでまとめてメモ。</p>\n\t\t\t<section>\n\t\t\t\t<h3>アソシエーションの使い方</h3>\n\t\t\t\t<p>まず、ふつうに張って関係を定義します。\n\t\t\t\tこのときに、どれとどれが関係しているのかを決めるのですが、\n\t\t\t\tここで2種類の連結方法があります。</p>\n\t\t\t\t<dl>\n\t\t\t\t<div>\n\t\t\t\t\t<dt>外部キーを残さないもの</dt>\n\t\t\t\t\t<dd>独立アソシエーション</dd>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<dt>外部キーを残すもの</dt>\n\t\t\t\t\t<dd>外部キーアソシエーション</dd>\n\t\t\t\t</div>\n\t\t\t\t</dl>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>独立アソシエーション</h3>\n\t\t\t\t<p>サロゲートキーなテーブルならこちら。</p>\n\t\t\t\t<p>アソシエーションのマッピングを開いてマップします。\n\t\t\t\txxにマップという欄は、\n\t\t\t\t子テーブル(<strong>0または1</strong>対<strong>多</strong>なら<strong>多</strong>のほう)を選んで、\n\t\t\t\tマップしたプロパティを子テーブル側から削除します。</p>\n\t\t\t\t<p class=\"note\">キーとなるプロパティは削除できないので、\n\t\t\t\tその場合は外部キーアソシエーションを使う？</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>外部キーアソシエーション</h3>\n\t\t\t\t<p>自然キーのテーブルはこちら。\n\t\t\t\t.NET Framework 4.0から対応しているみたいです。</p>\n\t\t\t\t<p>アソシエーションをダブルクリックで開いて、\n\t\t\t\t対応するプロパティを定義します。\n\t\t\t\t<strong>0または1</strong>対<strong>多</strong>関係の場合は、\n\t\t\t\t親テーブル(<strong>0または1</strong>のほう)を選びます。\n\t\t\t\t入力が終わったら、アソシエーションのマッピングを開いて、\n\t\t\t\tそこにマッピングが残っていたら削除して終わりです。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>参考ページ</h3>\n\t\t\t\t<ul>\n\t\t\t\t<li><a href=\"http://d.hatena.ne.jp/sixpetals/20100506\">外部キーアソシエーションに変更する方法</a></li>\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>トラブルメモ</h2>\n\t\t\t<section>\n\t\t\t\t<h3>組み込み演算子が動作しない</h3>\n\t\t\t\t<p>組み込み演算子($selectなど)はASCII文字しか認識しないのかも。\n\t\t\t\t以下の指定はどちらも正常に動作します。</p>\n\t\t\t\t<pre><code>List?$select=Type\nリスト('ID')</code></pre>\n\t\t\t\t<p>以下の場合はエラーになります。</p>\n\t\t\t\t<pre><code>List?$select=種類</code></pre>\n\t\t\t\t<p>リスト名はマルチバイト文字を受け付けるのですね。\n\t\t\t\tなんだかなあ、ださいなあ、と思います。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>datetime型の書き込みができない</h3>\n\t\t\t\t<p>datetime型を持つレコードを、\n\t\t\t\tJSON形式でPOSTまたはPUTすると、文法エラーが返ってきます。\n\t\t\t\t具体的なコードは以下。</p>\n\t\t\t\t<pre><code class=\"js\">var data = {d: &quot;\\\\/Date(1291005669546)\\\\/&quot;}\npost(url, data)\t\t// エラー</code></pre>\n\t\t\t\t<p>これは、文字列としては&quot;\\/Date(...)\\/&quot;なのですが、\n\t\t\t\tJSONにすると&quot;\\\\/Date(...)\\\\/&quot;になり、\n\t\t\t\tWCF Data Servicesの想定する日付表現と異なるためです。\n\t\t\t\tややこしいことに、以下のように書くと、\n\t\t\t\t今度は&quot;/Date(...)/&quot;となり、これもまたエラーになります。</p>\n\t\t\t\t<pre><code>var data = {d: &quot;\\/Date(1291005669546)\\/&quot;}</code></pre>\n\t\t\t\t<p>これ、バグじゃないかとさえ思えてくるのですが、\n\t\t\t\tとりあえず以下のようにすると、うまく動作します。</p>\n\t\t\t\t<pre><code>var data = {d: &quot;2010-11-29T12:00:00&quot;}</code></pre>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>PUTするとアクセス権エラーになる</h3>\n\t\t\t\t<p>GET, POSTはできているのにPUTがエラーになる場合、\n\t\t\t\tWebサーバのファイルアクセス権が足りないのかもしれません。\n\t\t\t\t関係するアクセス権は以下の通り。</p>\n\t\t\t\t<ul>\n\t\t\t\t<li>Webサーバ(http動詞)</li>\n\t\t\t\t<li>Webサーバ(ファイルアクセス権)</li>\n\t\t\t\t<li>WCF Data Services</li>\n\t\t\t\t<li>データベース(ユーザ認証)</li>\n\t\t\t\t<li>データベース(テーブルアクセス権)</li>\n\t\t\t\t</ul>\n\t\t\t\t<p>分かりにくいのはWebサーバ(ファイルアクセス権)でしょうか。\n\t\t\t\tこの場合、<a href=\"http://learn.iis.net/page.aspx/266/troubleshooting-failed-requests-using-tracing-in-iis-7/\">Troubleshooting Failed Request Using Tracing in IIS7</a>\n\t\t\t\tのようにログを取ると、FileAuthorizationになっていますので、\n\t\t\t\twwwrootまたは必要な場所でIUSRに書き込み権を与えると解消します。\n\t\t\t\tIIS_IUSRとは違いますので注意です。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>キーを指定してデータを取得すると構文エラーになる</h3>\n\t\t\t\t<p>WCF Data Servicesでは、':'(コロン)を含むURLを弾くみたいです。\n\t\t\t\tこれが問題になるのはdatetime型を\n\t\t\t\tキーにしている場合が多いかなあと思いますが、\n\t\t\t\t時刻が全部0なら、datetime'2010-11-29'のように\n\t\t\t\t省略すれば回避できます。</p>\n\t\t\t\t<p>しかし、時刻部分がある場合はどうすればいいのだろう。</p>\n\t\t\t</section>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<section>\n\t\t<h1>関連情報</h1>\n\t\t<ul>\n\t\t<li><a href=\"1227.html\">SproutCoreとWCF Data Servicesの連携</a></li>\n\t\t</ul>\n\t</section>\n\t<section>\n\t\t<h1>WCF Data Services</h1>\n\t\t<ul>\n\t\t<li><a href=\"http://msdn.microsoft.com/ja-jp/library/cc668792.aspx\">WCF Data Services</a></li>\n\t\t<li><a href=\"http://www.odata.org/\">Open Data Protocol</a></li>\n\t\t<li><a href=\"http://msdn.microsoft.com/ja-jp/magazine/ff714561.aspx\">実用OData</a></li>\n\t\t<li><a href=\"http://msdn.microsoft.com/ja-jp/magazine/ff872392.aspx\">ODataとAtomPub</a></li>\n\t\t<li><a href=\"http://www.odata.org/developers/odata-sdk\">OData-SDK</a></li>\n\t\t</ul>\n\t</section>\n</aside>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}