{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: Plan 9カーネルのブートまわり自分用まとめ</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2012年10月14日作成</p>\n\t<section>\n\t\t<h1>Plan 9カーネルのブートまわり自分用まとめ</h1>\n\t\t<p>Plan 9のブートまわりは、思ったよりいろいろな動きをしていたので、\n\t\t調べた範囲でメモ。</p>\n\t\t<section>\n\t\t\t<h2>ブート全体の動き</h2>\n\t\t\t<p>Plan 9のブートは、カーネルだけじゃなくて、\n\t\t\tbootというプログラム(ソースは/sys/src/9/bootあたり)が動いています。\n\t\t\tbootには引数として、plan9.iniのbootargsがbargc, bargvになって渡されます。\n\t\t\t何をしているのかというと、最低限必要なファイルツリーを作ったり、\n\t\t\tfactotumなど必要なプロセスを立ち上げているようです。</p>\n\t\t\t<p>もう少し細かくいうと、bootは、boot/boot.c:authenticate()の中で\n\t\t\tfactotumを実行します。このとき、カーネルコンフィグ(CONF=pcauthとか)により\n\t\t\t呼び出し方法が変わります。\n\t\t\t具体的には、cpu/authサーバならコンフィグにcpuflagが立つのですが、\n\t\t\tcpuflagが立っていると、bootはfactotumを-Sオプション付きで実行します。\n\t\t\tその結果、factotumはサーバモードになって、nvramを読むようになります。</p>\n\t\t\t<p>また、bootが実行するfactotumには、条件は忘れましたが-aオプションにより\n\t\t\tplan9.iniのauth=値が認証サーバのIPアドレスとして渡されます。\n\t\t\tauth=がなければブート時に訪ねられます。たとえばILの場合は、\n\t\t\tオプションとして&quot;-a il!xxx.xxx.xxx.xxx!566&quot;となります。</p>\n\t\t\t<p>次に、bootはルートファイルシステムをマウントします。\n\t\t\tここで面白いのは、まだルートファイルシステムを得ていないのに\n\t\t\tすでにbootがfactotumを実行しているのですが(もっと言えばboot自体もですね)、\n\t\t\tじゃあこのfactotumはどこから持ってきたのかという話。</p>\n\t\t\t<p>これは、カーネルコンフィグのbootdirセクションに挙げたファイルを、\n\t\t\tカーネルが最初からもってビルドされているようです。\n\t\t\t実際に/bootをみれば、ビルドした時点のファイルが入っているはずです。</p>\n\t\t\t<p>ルートファイルシステムのマウントに戻すと、\n\t\t\tbootは、plan9.iniのbootargsがlocal!で始まっていない場合、\n\t\t\tbootargsの値を使ってipconfigを実行し、ネットワーク設定を行います。\n\t\t\t次に、bootはネットワークからファイルシステムをマウントしようとします。\n\t\t\tファイルサーバのIPアドレスは、plan9.iniのfs=を使って、\n\t\t\tもしfs=がなければブート時に入力を受け付けます。\n\t\t\tファイルサーバは、それが認証を必要とするなら、マウント時に接続元へ伝えます。\n\t\t\tfauth()の結果が0以上なら認証が必要です。</p>\n\t\t\t<div class=\"note\">\n\t\t\t\t<p>あまり使わないと思いますが、Ken fsの場合、\n\t\t\t\t以下のコマンドで認証が不要になります。</p>\n\t\t\t\t<pre><code>fs: flag authdisable</code></pre>\n\t\t\t\t<p>再度有効にしたい場合は同じコマンドをもう一度。</p>\n\t\t\t</div>\n\t\t\t<p>bootは、認証が必要と分かったので、factotumを経由してp9anyプロトコルで\n\t\t\t通信をはじめます。p9anyはそれ自体が認証をするわけではなく、\n\t\t\tどの認証プロトコルを使って認証するかを決めるためのものです。\n\t\t\tこのプロトコルはとても簡単で、\n\t\t\tサーバ(この場合はファイルサーバ)が理解できる認証プロトコルをリストで返して、\n\t\t\t共通して使えるものをクライアント(ブート中のシステム)が選択するだけです。\n\t\t\tファイルサーバをマウントする場合はだいたいp9sk1が選ばれます。\n\t\t\tp9sk1はPlan 9の共有鍵認証なのでまあ普通ですね。</p>\n\t\t\t<p>具体的な認証プロトコルが決まったら、p9anyはリレー状態に入って、\n\t\t\tあとはp9sk1が認証を行います。このあたりは、factotumのソースコードの\n\t\t\tp9any.c, p9sk1.cあたりに書かれています。</p>\n\t\t\t<p class=\"note\">plan9.iniにfactotumopts=-dと書いておくと、bootがfactotumを起動するときに\n\t\t\t引数として渡してくれているので、認証の動きが見れて楽しい。</p>\n\t\t\t<p>続いて、factotumはp9sk1で共有鍵認証を開始しますが、\n\t\t\tブートしている対象(ファイルサーバからみて接続元)が認証サーバの場合、\n\t\t\tファイルサーバは認証しろと言っているのに、認証サーバが立ち上がりきっていなくて、\n\t\t\t認証するための情報(/admやkeyfs)はファイルサーバにある、という状況になります。\n\t\t\t具体的には、(ILの場合)il566をlistenするのはcpurcの中なので、\n\t\t\tこの時点ではまだlistenしていません。この場合、誰が認証するのか、という話。</p>\n\t\t\t<p>答えは、認証サーバとなるサーバのfactotumが、自分で認証チケットを作っています。\n\t\t\t認証サーバとなるべきサーバは、bootから-aオプションで渡されたIPアドレス(自分)と\n\t\t\t通信しますが、このときlistenをしていないので、il566はrejectします。\n\t\t\tなのでil.cのilrejectが呼ばれて、接続拒否されます。\n\t\t\tfactotumは接続拒否を受けて、かつ自分自身がブート中だと判断されれば、\n\t\t\t自分でチケットを生成して、そのチケットで認証を行います。\n\t\t\tチケット生成にはサーバキーを使っているんでしょうけど、詳しくは追ってません。\n\t\t\tソースコードでいうと、factotum/util.c:_authdialあたり。</p>\n\t\t\t<p>その後、9dosとかinitとかを実行して、cpurcへ進みます。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>カーネルコンフィグ</h2>\n\t\t\t<p>上でちょっと出たので、カーネルコンフィグについて少しメモ。</p>\n\t\t\t<section>\n\t\t\t\t<h3>dev, link, misc, ipセクション</h3>\n\t\t\t\t<p>普通にデバイスドライバのソースコード名。\n\t\t\t\t書けばビルド対象ファイルに含まれます。</p>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<h3>bootセクション</h3>\n\t\t\t\t<p>boot/mkboot, port/mkextractを使って、Method構造体の配列を作る。\n\t\t\t\t文字列&quot;xx&quot;, configxx, connectxx(xxはbootセクションの各行)な関数と、\n\t\t\t\t2個目のフィールドを持つ構造体。</p>\n\t\t\t\t<p>Method構造体の配列は、plan9.iniに書かれているbootargsと比較して、\n\t\t\t\tbootargsの最初の'!'まで、またはMethod分だけ一致したものを使います。\n\t\t\t\tplan9.iniにnobootpromptがあれば、bootargsの代わりに\n\t\t\t\tnobootpromptの値を使います(boot/boot.c:rootserver())。</p>\n\t\t\t\t<p>それと、bootセクション開始行はいくつかパターンがあり、非常にわかりづらい。</p>\n\t\t\t\t<table>\n\t\t\t\t<tr><th>conf</th><th>cpuflag</th><th>bootprog</th><th>bootdisk</th><th>rootdir</th></tr>\n\t\t\t\t<tr><td>boot cpu</td><td>1</td><td>boot</td><td>#S/sdC0/</td><td>/root</td></tr>\n\t\t\t\t<tr><td>boot cpu boot xxxx</td><td>1</td><td>boot</td><td>xxxx</td><td>/root</td></tr>\n\t\t\t\t<tr><td>boot rootdir xxxx</td><td>0</td><td>boot</td><td>#S/sdC0/</td><td>xxxx</td></tr>\n\t\t\t\t<tr><td>boot bboot</td><td>1</td><td>bboot</td><td>#S/sdC0/</td><td>/root</td></tr>\n\t\t\t\t<tr><td>boot romboot</td><td>1</td><td>romboot</td><td>#S/sdC0/</td><td>/root</td></tr>\n\t\t\t\t<tr><td>boot dosboot</td><td>1</td><td>dosboot</td><td>#S/sdC0/</td><td>/root</td></tr>\n\t\t\t\t<tr><td>boot boot xxxx</td><td>0</td><td>boot</td><td>xxxx</td><td>/root</td></tr>\n\t\t\t\t</table>\n\t\t\t\t<p>cpuflagは、1ならfactotum -Sで動作します。</p>\n\t\t\t</section>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>plan9.ini</h2>\n\t\t\t<p>ブートにかかわるplan9.iniのエントリ。</p>\n\t\t\t<dl>\n\t\t\t<div>\n\t\t\t\t<dt>bootargs</dt>\n\t\t\t\t<dd>ネットワーク設定と、どこからルートをマウントするかなど</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>nobootprompt</dt>\n\t\t\t\t<dd>bootargsに代わって、プロンプトを出さない版</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>fs</dt>\n\t\t\t\t<dd>マウントするファイルサーバのIPアドレス</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>auth</dt>\n\t\t\t\t<dd>認証サーバのIPアドレス</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>factotumopts</dt>\n\t\t\t\t<dd>bootが実行するfactotumに渡すオプション</dd>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<dt>debugboot</dt>\n\t\t\t\t<dd>1なら、デバッグ出力を有効にする</dd>\n\t\t\t</div>\n\t\t\t</dl>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}