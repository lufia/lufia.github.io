{"pageProps":{"html":"<!doctype html>\n<html lang=\"ja\">\n<head>\n<meta charset=\"utf-8\">\n<title>orange/note: AtomとXSLTと名前空間(2)</title>\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n<meta name=\"author\" content=\"http://www.hatena.ne.jp/lufiabb/\">\n</head>\n<body>\n<nav>\n\t<h1>メニュー</h1>\n\t<ul>\n\t<li><a href=\"/notes/index.html\">orange/note</a></li>\n\t<li><a href=\"/notes/pc.html\">PC関連</a></li>\n\t<li><a href=\"/notes/web.html\">web製作</a></li>\n\t<li><a href=\"/notes/sec.html\">セキュリティ</a></li>\n\t<li><a href=\"/notes/hobby.html\">本・ゲーム</a></li>\n\t<li><a href=\"/notes/junk.html\">ジャンク</a></li>\n\t</ul>\n</nav>\n<main>\n\t<p class=\"revision\">2008年1月15日作成</p>\n\t<section>\n\t\t<h1>AtomとXSLTと名前空間(2)</h1>\n\t\t<section>\n\t\t\t<h2>環境を選びますが</h2>\n\t\t\t<p><a href=\"/notes/index.html\">orange/note</a>では、JavaScript+XSLTを使い、\n\t\t\t<a href=\"/notes/atom.xml\">atom.xml</a>から<a href=\"/notes/index.html\">index.html</a>を\n\t\t\t自動生成しています。\n\t\t\tこれを作るときにめいっぱい悩んだのでメモ。</p>\n\t\t\t<p class=\"note\">以前の話。\tSafariでは動かないので、いまは使っていません。</p>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>atom:contentに含まれるHTMLノードを取り出す</h2>\n\t\t\t<p>まだよく理解できていないのですが、\n\t\t\txmlnsでxhtmlを指定しないといけないみたいです。\n\t\t\tfami-note:<a href=\"http://d.hatena.ne.jp/faminote/20070206/1170714329\">atom:contentをXSLTを使って表示する時</a></p>\n\t\t\t<pre><code class=\"xml\">&lt;xsl:stylesheet version=&quot;1.0&quot;\n\txmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;\n\txmlns:atom=&quot;http://www.w3.org/2005/Atom&quot;\n\txmlns:xhtml=&quot;http://www.w3.org/1999/xhtml&quot;\n\txmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;xsl:output method=&quot;xml&quot; encoding=&quot;UTF-8&quot;\n\tomit-xml-declaration=&quot;no&quot;\n\n...\n\n&lt;xsl:template match=&quot;atom:content&quot;&gt;\n\t&lt;xsl:copy-of select=&quot;xhtml:html/xhtml:body&quot;/&gt;\n&lt;/xsl:template&gt;</code></pre>\n\t\t\t<p>省略した場合はうまく動かないです。なぜ?\n\t\t\t名前空間は同じに見えるんですが。。</p>\n\t\t\t<pre><code class=\"xml\">&lt;!-- うまく動かないバージョン --&gt;\n&lt;xsl:stylesheet version=&quot;1.0&quot;\n\txmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;\n\txmlns:atom=&quot;http://www.w3.org/2005/Atom&quot;\n\txmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n&lt;xsl:output method=&quot;xml&quot; encoding=&quot;UTF-8&quot;\n\tomit-xml-declaration=&quot;no&quot;\n\n...\n\n&lt;xsl:template match=&quot;atom:content&quot;&gt;\n\t&lt;xsl:copy-of select=&quot;html/body&quot;/&gt;\n&lt;/xsl:template&gt;</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>最新10件だけ展開する</h2>\n\t\t\t<p>これもいまいち理解できてない気がします。特にxsl:number。\n\t\t\tlevel = single | multiple | anyの違いとか。</p>\n\t\t\t<p>xsl:value-ofではタグが無視されてしまうので、xsl:copy-ofを使う。\n\t\t\tソートする必要があるなら、xsl:sortが使えるみたい。</p>\n\t\t\t<pre><code class=\"xml\">&lt;xsl:template match=&quot;atom:content&quot;&gt;\n\t&lt;xsl:variable name=&quot;n&quot;&gt;\n\t\t&lt;xsl:number level=&quot;any&quot;/&gt;\n\t&lt;/xsl:variable&gt;\n\n\t&lt;xsl:if test=&quot;$n &amp;lt; 10&quot;&gt;\n\t\t&lt;xsl:copy-of select=&quot;xhtml:html/xhtml:body&quot;/&gt;\n\t&lt;/xsl:if&gt;\n&lt;/xsl:template&gt;</code></pre>\n\t\t</section>\n\t\t<section>\n\t\t\t<h2>CSSでマルチカラム</h2>\n\t\t\t<p>参考URLだけ。\n\t\t\tIE5, IE6は早く滅びてしまうといいです。</p>\n\t\t\t<ul>\n\t\t\t<li><a href=\"http://mb.blog7.fc2.com/blog-entry-83.html\">CSSレイアウトの定石 WinIE6バグ回避法</a></li>\n\t\t\t<li><a href=\"http://www.geocities.jp/multi_column/\">CSSによる段組(マルチカラム)レイアウト講座</a></li>\n\t\t\t</ul>\n\t\t</section>\n\t</section>\n</main>\n<aside>\n\t<h1>やっていること</h1>\n\t<ul>\n\t<li><a href=\"/plan9/index.html\">Plan 9</a></li>\n\t<li><a href=\"http://web.me.com/lufia/alefcompiler/alef/\">Alefコンパイラを読む</a></li>\n\t</ul>\n</aside>\n<footer>\n\t<p>見れない、表示がおかしい場合は、動作環境を添えて<a href=\"mailto:webmaster@lufia.org\">webmaster@lufia.org</a>まで連絡ください。</p>\n</footer>\n</body>\n</html>\n"},"__N_SSG":true}